<?php

namespace {{ datatableNamespace }};

use {{ namespacedModel }};
use App\Models\Role;
use Illuminate\View\View;
use VariableSign\DataTable\DataTable;
use VariableSign\DataTable\Facades\Row;
use VariableSign\DataTable\Facades\Table;
use VariableSign\DataTable\Facades\Column;
use VariableSign\DataTable\Facades\Filter;
use Illuminate\Database\Eloquent\Builder;

class {{ datatableClass }} extends DataTable
{
    protected string $tableName = '{{ modelLowerPlural }}';

    protected ?string $orderColumn = '{{ defaultColumn }}';

    protected string $orderDirection = 'asc';

    protected function columns(): array
    {
        return [
            Column::name('id')
                ->alias('checkbox')
                ->checkbox(),

            Column::name('index')
                ->alias('index')
                ->title('#')
                ->index(),

            Column::name('staff_id')
                ->title('Staff Number')
                ->searchable(function (Builder $query, string $keyword) {
                    $query->orWhere('staff_id', 'like', '%'. $keyword .'%');
                })
                ->sortable()
                ->edit(function (mixed $value, {{ model }} ${{ modelLower }}, int $index) {
                    return ${{ modelLower }}->staff_id;
                }),

            Column::name('name')
                ->title('Name')
                ->searchable(['first_name', 'last_name'])
                ->sortable(['first_name', 'last_name'])
                ->edit(function (mixed $value, {{ model }} ${{ modelLower }}, int $index) {
                    return ${{ modelLower }}->first_name . ' ' . ${{ modelLower }}->last_name;
                }),

            Column::name('role')
                ->title('Role')
                ->searchable(function (Builder $query, string $keyword) {
                    $query->orWhereHas('role', function (Builder $query) use ($keyword) {
                        $query->where('name', 'like', '%'. $keyword .'%');
                    });
                })
                ->sortable(function (Builder $query, $direction) {
                    $query->orderBy(Role::select('name')->whereColumn('roles.id', 'users.role_id'), $direction);
                })
                ->filterable(function () {
                    return Filter::select()
                        ->dataSource(Role::all())
                        ->value('id')
                        ->label('name');
                })
                ->edit(function (mixed $value, {{ model }} ${{ modelLower }}, int $index) {
                    return ${{ modelLower }}->role->name;
                }),

            Column::name('actions')
                ->attributes([
                    'class' => 'w-0 p-2',
                ])
                ->edit(function (mixed $value, {{ model }} ${{ modelLower }}, int $index) {
                    return view('user.actions', compact('{{ modelLower }}'));
                })
        ];
    }

    protected function setup(): array
    {
        return [
            Table::attributes([
                'class' => 'default-table table-hover'
            ]),

            Row::attributes(function ({{ model }} ${{ modelLower }}, int $index) {
                return [
                    'class' => 'hover:bg-gray-50',
                    'data-index' => $index
                ];
            })
        ];
    }

    protected function dataSource(): Builder
    {
        return {{ model }}::with('role');
    }

    protected function emptyState(): string|View
    {
        return 'Start adding {{ modelLowerPlural }}!';
    }

    protected function notFound(?string $keyword): string|View
    {
        return 'No results found for ' . $keyword;
    }
}