<?php

namespace {{ datatableNamespace }};

use {{ namespacedModel }};
use App\Models\Role;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Query\Builder as QueryBuilder;
use Illuminate\View\View;
use VariableSign\DataTable\Filter;
use VariableSign\DataTable\DataTable;
use VariableSign\DataTable\Facades\Column;
use VariableSign\DataTable\Facades\Row;
use VariableSign\DataTable\Facades\Table;

class {{ datatableClass }} extends DataTable
{
    protected string $tableName = '{{ modelLowerPlural }}';

    protected ?string $orderColumn = 'id';

    protected string $orderDirection = 'asc';

    protected function columns(): array
    {
        return [
            Column::name('id')
                ->alias('checkbox')
                ->checkbox(),

            Column::name('index')
                ->alias('index')
                ->title('#')
                ->index(),

            Column::name('staff_number')
                ->title('Staff Number')
                ->searchable(function (Builder $query, string $keyword) {
                    $query->orWhere('staff_id', 'like', '%'. $keyword .'%');
                })
                ->sortable(['staff_id'])
                ->edit(function (mixed $value, {{ model }} $model, int $index) {
                    return $model->staff_id;
                }),

            Column::name('name')
                ->title('Name')
                ->searchable(['first_name', 'last_name'])
                ->sortable(['first_name', 'last_name'])
                ->edit(function (mixed $value, {{ model }} $model, int $index) {
                    return $model->first_name . ' ' . $model->last_name;
                }),

            Column::name('role')
                ->title('Role')
                ->searchable(function (Builder $query, string $keyword) {
                    $query->orWhereHas('role', function (Builder $query) use ($keyword) {
                        $query->where('name', 'like', '%'. $keyword .'%');
                    });
                })
                ->sortable(function (Builder $query, $direction) {
                    $query->orderBy(Role::select('name')->whereColumn('roles.id', 'users.role_id'), $direction);
                })
                ->filterable(function (Filter $filter) {
                    return $filter->select()
                        ->dataSource(Role::all())
                        ->value('id')
                        ->label('name');
                })
                ->edit(function (mixed $value, {{ model }} $model, int $index) {
                    return $model->role->name;
                }),

            Column::name('actions')
                ->attributes([
                    'class' => 'w-0 p-2',
                ])
                ->edit(function (mixed $value, {{ model }} $model, int $index) {
                    return view('user.actions', compact('model'));
                })
        ];
    }

    protected function setup(): array
    {
        return [
            Table::attributes([
                'class' => 'table-hover'
            ]),

            Row::attributes(function ({{ model }} $model, int $index) {
                return [
                    'class' => 'bg-gray',
                    'data-index' => $index
                ];
            })
        ];
    }

    protected function dataSource(): Builder|QueryBuilder
    {
        return {{ model }}::with('role');
    }

    protected function emptyState(): string|View
    {
        return 'Start adding records now!';
    }

    protected function notFound(?string $keyword): string|View
    {
        return 'No results found for ' . $keyword;
    }

    public function exporter(Builder|QueryBuilder $query, ?string $format)
    {
        return 'Exporter with an HTTP response.';
    }
}